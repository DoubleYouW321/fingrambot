from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage

import app.finans_calculator_keyboard as calc_kb

storage = MemoryStorage()
infl_router = Router()

class InflStates(StatesGroup):
    waiting_principal = State()
    waiting_rate = State()
    waiting_years = State()

class SimpleInflCalculator:
    @staticmethod
    def calculate(principal: float, rate: float, years: int) -> dict:

        future_sum = principal * (1 + rate/100)**years
        miss_sum = future_sum - principal
        proc_miss = (miss_sum / principal) * 100
        return {
            'principal': principal,
            'rate': rate,
            'years': years,
            'future_sum': future_sum,
            'miss_sum': miss_sum,
            'proc_miss': proc_miss
        }
    
@infl_router.callback_query(F.data == 'infl_calc')
async def infl(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–∏—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=calc_kb.infl)

@infl_router.callback_query(F.data == 'infl_info')
async def infl_info(callback: CallbackQuery):
    await callback.answer('')
    info_text = ("üìâ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏–Ω—Ñ–ª—è—Ü–∏–∏\n\n"
        "üìä –ß—Ç–æ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä:\n"
        "‚Ä¢ –ë—É–¥—É—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–µ–Ω–µ–≥\n"
        "‚Ä¢ –ü–æ—Ç–µ—Ä—é –ø–æ–∫—É–ø–∞—Ç–µ–ª—å–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏\n"
        "‚Ä¢ –†–µ–∞–ª—å–Ω—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π\n"
        "‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏\n\n"
        "üîÑ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:\n"
        "1. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–µ–Ω–µ–≥ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100000)\n"
        "2. –í–≤–µ–¥–∏—Ç–µ –≥–æ–¥–æ–≤—É—é –∏–Ω—Ñ–ª—è—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: 7)\n"
        "3. –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –≤ –≥–æ–¥–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 5)\n\n"
        "üìà –ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞:\n"
        "–°—É–º–º–∞: 100,000 ‚ÇΩ\n"
        "–ò–Ω—Ñ–ª—è—Ü–∏—è: 7%\n"
        "–ü–µ—Ä–∏–æ–¥: 5 –ª–µ—Ç\n"
        "–†–µ–∑—É–ª—å—Ç–∞—Ç:\n"
        "‚Ä¢ –ë—É–¥—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ~140,255 ‚ÇΩ\n"
        "‚Ä¢ –ü–æ—Ç–µ—Ä—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏: ~40,255 ‚ÇΩ\n"
        "‚Ä¢ –û–±–µ—Å—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ: 40%\n\n"
        "üí° –ò–Ω—Ñ–ª—è—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ –¥–æ—Ä–æ–∂–µ —Å—Ç–∞–Ω–µ—Ç –∂–∏–∑–Ω—å –≤ –±—É–¥—É—â–µ–º")
    await callback.message.edit_text(info_text, reply_markup=calc_kb.back_to_infl)

@infl_router.callback_query(F.data == 'infl_start')
async def infl_start(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    
    await state.set_state(InflStates.waiting_principal)
    
    await state.update_data(user_id=callback.from_user.id)
    
    await callback.message.edit_text(
        "üíµ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏–ø–æ—Ç–µ–∫–∏:\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: 1000000"
    )

@infl_router.message(InflStates.waiting_principal)
async def process_principal(message: Message, state: FSMContext):
    try:
        data = await state.get_data()
        if not data:
            await message.answer("‚ùå –°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –ù–∞—á–Ω–∏—Ç–µ —Ä–∞—Å—á–µ—Ç –∑–∞–Ω–æ–≤–æ.", reply_markup=calc_kb.infl)
            await state.clear()
            return
            
        principal = float(message.text.replace(',', '.'))
        if principal <= 0:
            await message.answer("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:")
            return
        
        await state.update_data(principal=principal)
        await state.set_state(InflStates.waiting_rate)
        await message.answer(
            f"üíµ –°—É–º–º–∞: {principal:,.0f} ‚ÇΩ\n\n"
            "üìà –í–≤–µ–¥–∏—Ç–µ % –∏–Ω—Ñ–ª—è—Ü–∏–∏:\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: 8"
        )
        
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:")

@infl_router.message(InflStates.waiting_rate)
async def process_rate(message: Message, state: FSMContext):
    try:
        data = await state.get_data()
        if not data or 'principal' not in data:
            await message.answer("‚ùå –°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –ù–∞—á–Ω–∏—Ç–µ —Ä–∞—Å—á–µ—Ç –∑–∞–Ω–æ–≤–æ.", reply_markup=calc_kb.infl)
            await state.clear()
            return
            
        rate = float(message.text.replace(',', '.'))
        if rate <= 0:
            await message.answer("‚ùå –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π. –í–≤–µ–¥–∏—Ç–µ % –∏–Ω—Ñ–ª—è—Ü–∏–∏:")
            return
        
        await state.update_data(rate=rate)
        await state.set_state(InflStates.waiting_years)
        
        principal = data['principal']
        
        await message.answer(
            f"üíµ –°—É–º–º–∞: {principal:,.0f} ‚ÇΩ\n"
            f"üìà % –ò–Ω—Ñ–ª—è—Ü–∏–∏: {rate}%\n\n"
            "‚è± –í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –≤ –≥–æ–¥–∞—Ö:\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: 10"
        )
        
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ % –∏–Ω—Ñ–ª—è—Ü–∏–∏:")

@infl_router.message(InflStates.waiting_years)
async def process_years(message: Message, state: FSMContext):
    try:
        data = await state.get_data()
        if not data or 'principal' not in data or 'rate' not in data:
            await message.answer("‚ùå –°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –ù–∞—á–Ω–∏—Ç–µ —Ä–∞—Å—á–µ—Ç –∑–∞–Ω–æ–≤–æ.", reply_markup=calc_kb.infl)
            await state.clear()
            return
            
        years = int(message.text)
        if years <= 0:
            await message.answer("‚ùå –°—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º. –í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫:")
            return
        
        principal = data['principal']
        rate = data['rate']
        
        result = SimpleInflCalculator.calculate(principal, rate, years)
        
        response = (
            f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞:\n\n"
            f"üíµ –ù–∞—á–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {result['principal']:,.0f} ‚ÇΩ\n"
            f"üìà %: {result['rate']}%\n"
            f"‚è± –°—Ä–æ–∫: {result['years']} –ª–µ—Ç\n\n"
            f"üí∞ –ë—É–¥—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {result['future_sum']:,.0f} ‚ÇΩ\n"
            f"üí∏ –ü–æ—Ç–µ—Ä—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏: {result['miss_sum']:,.0f} ‚ÇΩ\n"
            f"–û–±–µ—Å—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ {result['proc_miss']:,.0f} %"
        )
        
        await message.answer(response)
        await state.clear()
        
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫:")


